#!/usr/bin/php
<?php
# Copyright (c) 2012-2013 Colin Williams / University of Southampton
# License: GPL

# This file is part of Event Feed Aggregator.

# Event Feed Aggregator is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Event Feed Aggregator is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Event Feed Aggregator.  If not, see <http://www.gnu.org/licenses/>.

global $diary_config;
$diary_config["path"] = dirname(dirname(__FILE__));
require($diary_config["path"].'/etc/config.php');
include $diary_config["path"].'/lib/scraper-utils.php';

initialiseScraper();

// Initialise the Feed URL.
$url = $options->FeedURL;

$sourcedocuments = array();
while(true)
{
	list($dom, $thissourcedocuments) = getHTML($url);
	foreach($thissourcedocuments as $sd)
	{
		$sourcedocuments[] = $sd;
	}

	// Break the while loop if the HTML could not be loaded or the listing 'div' could not be found.
	if($dom == null || $dom->find('div#main_content/div.listing') == null) { break; }
	
	foreach($dom->find('div#main_content/div.listing') as $item)
	{
		// Process the event.
		$data[] = processItem($item, $options, $thissourcedocuments);
	}

	// Try to find a 'next page' link.
	$hasnext = false;
	$paginate = $dom->find('p.paginate_links', 0);
	if($paginate != null)
	{
		foreach($paginate->find('a') as $link)
		{
			if($link->plaintext == "Next Page")
			{
				$url = $link->href;
				$hasnext = true;
				break;
			}
		}
	}

	// Break the while loop if no 'next page' link found.
	if(!$hasnext) { break; }
}
// Output the data as XML.
echo generateEventXML($data, $sourcedocuments, $issues);

/**
 * Process a single event.
 *
 * @param	object	$item		The item to process.
 * @param	array	$options	The options passed to this script.
 */
function process($item, $options, $sourcedocuments)
{
	// The Nuffield Theatre is Building 6.
	$theatreuri = "http://id.southampton.ac.uk/building/6";
	$locationuri = null;

	$date = html_entity_decode((string)$item->find('p.date', 0)->plaintext, ENT_COMPAT, 'UTF-8');
	$title = html_entity_decode((string)$item->find('h2', 0)->plaintext, ENT_COMPAT, 'UTF-8');
	$link = html_entity_decode((string)$item->find('a', 0)->href, ENT_COMPAT, 'UTF-8');
	$desc = "";

	$pdate = array();

	list($dom, $thissourcedocuments) = getHTML($link);
	foreach($thissourcedocuments as $sd)
	{
		$sourcedocuments[] = $sd;
	}
	if($dom->find('div#secondary_content/ul.perdates/li') != null)
	{
		foreach($dom->find('div#secondary_content/ul.perdates/li') as $perdate)
		{
			$perdate = preg_replace('/[^A-Za-z0-9 ,.]/', '', $perdate->find('text', 0));
			if(trim($perdate) != '')
			{
				$pdate[] = array('from' => date('c', strtotime($perdate)));
			}
		}
	}

	if($dom->find('div#main_content', 0) != null)
	{
		foreach($dom->find('div#main_content', 0)->children() as $p)
		{
			if($p->tag != "p")
			{
				if($p->tag == "div" && $p->find('h2', 0) != null && $p->find('h2', 0)->plaintext == "Venue")
				{
					$location = html_entity_decode((string)$p->find('p', 0)->plaintext, ENT_COMPAT, 'UTF-8');
					if($location == "Main House" || $location == "Studio")
					{
						$locationuri = $theatreuri;
					}
				}
				continue;
			}
			if($desc != "")
			{
				$desc .= "\n\n";
			}
			$desc .= html_entity_decode((string)$p->plaintext, ENT_COMPAT, 'UTF-8');
		}
	}
	
	$data = array(
		'title'				=> $title,
		'link'				=> $link,
		'date'				=> $pdate,
		'desc'				=> $desc,
		'venue'				=> $location,
		'feedName'			=> (string)$options->FeedName,
		'type'				=> (string)$options->Type,
		'feedID'			=> (string)$options->FeedID,
		'host'				=> (string)$options->FacultyUnitGroup,
		'tags'				=> explode(" ", $options->Tags),
		'sourceDocuments'	=> $sourcedocuments,
	);
	if(!is_null($locationuri))
	{
		$data['venuelink'] = $locationuri;
	}
	return $data;
}

